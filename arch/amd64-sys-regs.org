#+TITLE: AMD64(X86-64)系统寄存器介绍
#+AUTHOR: Cauchy(pqy7172@gmail.com)
#+EMAIL: pqy7172@gmail.com
#+HTML_HEAD: <link rel="stylesheet" href="../org-manual.css" type="text/css">

本文介绍AMD64架构下的系统寄存器, 这些寄存器可以说控制了整个AMD64机器的状态和功能. 当然这些介绍绝大部分同样也适合Intel系列的64位处理器.


* 系统控制寄存器
AMD64处理器包含常见的下列系统寄存器:
- CR0: 提供处理器操作模式以及一些处理器特点的控制.
- CR2: 由分页机制所使用. 当page-fault异常发生时, 就会被处理器填以page-fault的虚拟地址.
- CR3: 由分页机制所使用. 这个寄存器存有最高级别的页表, 对指定的页表, 它也会包含一些对它的缓存控制.
- CR4: 控制着操作模式各种特点.
- CR8: AMD64架构特有的, 在64-bit模式下使用REX前缀来访问. CR8可以使得外部中断具有优先级, 也叫做TPR寄存器(Task-Priority Register).
- RFLAGS: 该寄存器包含了处理器的状态和处理器控制域. 这些状态和控制域主要用来管理Virtual-8086模式, 硬件多任务以及中断.
- EFER: 对于不由CR0-CR0管理的处理器特点, 这个寄存器会包含这些特点的状态和有无.

在legacy mode下, 所有的控制寄存器以及RFLAGS都是32-bit宽. EFER在所有模式下都是64-bit. 而AMD64架构下, 所有的32-bit控制寄存器都被扩展到了64-bit. 在64-bit模式下, 使用MOV CRn指令读写这些控制寄存器都会操作在所有64-bit范围上(如果指令有prefix的话会被忽略). 而在兼容和legacy模式下, 往控制寄存器里写只会把低32位填充有效数据, 高32位会被填0. 读这些寄存器就只会返回低32位的数据了.

在64-bit模式下, CR0和CR4的高32位是预留的并且只能写入0, 写入1的话会导致general-protection异常.

** CR0寄存器
